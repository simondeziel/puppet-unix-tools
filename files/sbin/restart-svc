#!/bin/sh

# Copyright (c) 2014-2017 Simon Deziel <simon.deziel@gmail.com>

# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.

# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

# Explicitly set the PATH to that of ENV_SUPATH in /etc/login.defs and unset
# various other variables. For details, see:
# https://wiki.ubuntu.com/SecurityTeam/AppArmorPolicyReview#Execute_rules
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export ENV=
export CDPATH=

CHECK_DELETED_LIBS="$(/usr/bin/which check-deleted-libs 2>/dev/null)"

# Report an error and exit
perror () {
  echo "Error: $1" >&2
  exit 1
}

# Check if everything is there to be used
[ -n "$CHECK_DELETED_LIBS" ] || p_error "check-deleted-libs binary is missing"
[ -x "$CHECK_DELETED_LIBS" ] || p_error "$CHECK_DELETED_LIBS not executable"
[ -r "/etc/os-release" ] || perror "Unable to read /etc/os-release, cannot identify the OS version"

. "/etc/os-release"
[ -z "$NAME" -o "$NAME" != "Ubuntu" ] && perror "This script only supports Ubuntu (not $NAME)"

service_action () {
  local svc_name="$1"
  local svc_action="$2"

  # Make sure the service is running before taking any action
  service "$svc_name" status >/dev/null 2>&1 && service "$svc_name" "$svc_action" >/dev/null
}

if [ "$#" -eq 1 ]; then
  EXCLUDE_LIST="$1"
else
  EXCLUDE_LIST="''"
fi

$CHECK_DELETED_LIBS | grep -vE "$EXCLUDE_LIST" | while read -r proc_name; do
  case "$proc_name" in
    acpid)
      service_action acpid restart
      ;;
    apache2)
      # does a graceful restart that won't restart the
      # master but will at least take care of the children
      service_action apache2 reload
      ;;
    atd)
      service_action atd restart
      ;;
    agetty)
      # ttyS0 is a guess
      service_action serial-getty@ttyS0 restart
      ;;
    cron)
      service_action cron restart
      ;;
    getty)
      # ttyX consoles started by Upstart are respawn on HUP
      pkill -HUP -x getty
      ;;
    irqbalance)
      service_action irqbalance restart
      ;;
    libvirtd)
      service_action libvirt-bin restart
      ;;
    mdadm)
      service_action mdadm restart
      ;;
    nginx)
      # Make sure the init script knows how to do in place
      # upgrades (replace the master bin) by asking an invalid
      # action and checking if "upgrade" is supported
      if service nginx help 2>&1 | grep -qwF upgrade; then
        service_action nginx upgrade
      fi
      ;;
    nrpe)
      service_action nagios-nrpe-server restart
      ;;
    nsd)
      if [ -x "/etc/init.d/nsd3" ]; then
        # nsd3's init script doesn't have "status"
        pgrep -x nsd > /dev/null && service nsd3 restart >/dev/null
      else
        service_action nsd restart
      fi
      ;;
    ntpd)
      if [ -x "/etc/init.d/openntpd" ]; then
        service_action openntpd restart
      else
        service_action ntp restart
      fi
      ;;
    rsyslogd)
      service_action rsyslog restart
      ;;
    smartd)
      service_action smartmontools restart
      ;;
    sshd)
      # make sure the config wouldn't cause problem on restart
      sshd -T > /dev/null 2>&1 && service_action ssh restart
      ;;
    systemd-timesyn)
      service_action systemd-timesyncd restart
      ;;
    tlsmgr)
      service_action postfix reload
      ;;
    udevd|systemd-udevd)
      service_action udev restart
      ;;
    unbound)
      service_action unbound restart
      ;;
    upstart-udev-br)
      service_action upstart-udev-bridge restart
      ;;
    upstart-socket-)
      service_action upstart-socket-bridge restart
      ;;
  esac
done
